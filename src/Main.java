import java.time.LocalDate;

public class Main {
    public static void main(String[] args) {
        System.out.println("Hello world!");
        LocalDate carManufacturingDate = LocalDate.now();


        SportsCar sportsCar = new SportsCar(carManufacturingDate);
        sportsCar.drive();
    }
}

// parent class
class Car {
    private LocalDate manufacturingDate;

    public Car(LocalDate manufacturingDate){
        this.manufacturingDate = manufacturingDate;
    }
    void turnOnEngine(){
        System.out.println("Engine is running...!");
    }

    public LocalDate getManufacturingDate(){
        return manufacturingDate;
    }
}

// child class
class SportsCar extends Car {
    public SportsCar(LocalDate manufacturingDate){
        super(manufacturingDate);
    }
    @Override
    void turnOnEngine(){
        super.turnOnEngine();
        System.out.println("You can drive now");
    }

    public void drive(){
        turnOnEngine();
        System.out.println("I'm driving!");
    }

    public void carInfo(){
        System.out.println("Car was built on: "+ this.getManufacturingDate());
    }
}


/*
    EXERCISE:
    Create multiple user registration classes for the following user types:
        - Customer
        - Seller
        - Admin
     All classes inherit from a base class "User"
     User contains => fullName, dob, gender, id(generated by method) and getters for these fields


     Customer will have customerId, balance, buy method and active flag
     Seller will have sellerId, list of goods(computers, food stuff, clothes, etc) and revenue and active flag
     Admin will have adminId and assigned list of customers and sellers, also method to suspend seller or customer


     Main class called 'Market' ==> [Customers, Sellers, Admins];
 */


//customerA.buy(sellerId, productId);
//adminA.suspend(id, "seller")